{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"collapsed_sections":[],"mount_file_id":"1DRF-Pldv1TZDOgXBjfwnkyfUvEOpLVnH","authorship_tag":"ABX9TyMMPMJ9Y1LC67UbEp4m1Kth"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":1,"metadata":{"id":"eVtIFYA8sWyv","executionInfo":{"status":"ok","timestamp":1666965324762,"user_tz":240,"elapsed":1121,"user":{"displayName":"Keegan Henderson","userId":"03705415019128751303"}}},"outputs":[],"source":["import pandas as pd\n","import seaborn as sns\n","import matplotlib.pyplot as plt\n","import numpy as np"]},{"cell_type":"code","source":["data = pd.read_csv(\"/content/drive/MyDrive/Colab Notebooks/Assignments/InClassAssignments/newhousing.csv\")"],"metadata":{"id":"_fhGGyaGstw0","executionInfo":{"status":"ok","timestamp":1666965324764,"user_tz":240,"elapsed":20,"user":{"displayName":"Keegan Henderson","userId":"03705415019128751303"}}},"execution_count":2,"outputs":[]},{"cell_type":"markdown","source":["###Preprocessing"],"metadata":{"id":"YlDbtYaitMkp"}},{"cell_type":"code","source":["data.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"06IigruotOOK","executionInfo":{"status":"ok","timestamp":1666965324766,"user_tz":240,"elapsed":21,"user":{"displayName":"Keegan Henderson","userId":"03705415019128751303"}},"outputId":"ffa3f589-5be4-41f9-a863-af0a10487eed"},"execution_count":3,"outputs":[{"output_type":"stream","name":"stdout","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 545 entries, 0 to 544\n","Data columns (total 16 columns):\n"," #   Column           Non-Null Count  Dtype  \n","---  ------           --------------  -----  \n"," 0   price            545 non-null    int64  \n"," 1   area             545 non-null    int64  \n"," 2   bedrooms         545 non-null    int64  \n"," 3   bathrooms        545 non-null    int64  \n"," 4   stories          545 non-null    int64  \n"," 5   mainroad         545 non-null    int64  \n"," 6   guestroom        545 non-null    int64  \n"," 7   basement         545 non-null    int64  \n"," 8   hotwaterheating  545 non-null    int64  \n"," 9   airconditioning  545 non-null    int64  \n"," 10  parking          545 non-null    int64  \n"," 11  prefarea         545 non-null    int64  \n"," 12  semi-furnished   545 non-null    int64  \n"," 13  unfurnished      545 non-null    int64  \n"," 14  areaperbedroom   545 non-null    float64\n"," 15  bbratio          545 non-null    float64\n","dtypes: float64(2), int64(14)\n","memory usage: 68.2 KB\n"]}]},{"cell_type":"markdown","source":["no missing values"],"metadata":{"id":"pmfFDU-DtVoD"}},{"cell_type":"code","source":["data.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":250},"id":"85k_l-w_tO67","executionInfo":{"status":"ok","timestamp":1666965324767,"user_tz":240,"elapsed":19,"user":{"displayName":"Keegan Henderson","userId":"03705415019128751303"}},"outputId":"adb4228a-dd9e-45c5-83a3-c1065813e21e"},"execution_count":4,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     price  area  bedrooms  bathrooms  stories  mainroad  guestroom  basement  \\\n","0  5250000  5500         3          2        1         1          0         1   \n","1  4480000  4040         3          1        2         1          0         0   \n","2  3570000  3640         2          1        1         1          0         0   \n","3  2870000  3040         2          1        1         0          0         0   \n","4  3570000  4500         2          1        1         0          0         0   \n","\n","   hotwaterheating  airconditioning  parking  prefarea  semi-furnished  \\\n","0                0                0        0         0               1   \n","1                0                0        1         0               1   \n","2                0                0        0         0               0   \n","3                0                0        0         0               0   \n","4                0                0        0         0               0   \n","\n","   unfurnished  areaperbedroom   bbratio  \n","0            0     1833.333333  0.666667  \n","1            0     1346.666667  0.333333  \n","2            1     1820.000000  0.500000  \n","3            1     1520.000000  0.500000  \n","4            0     2250.000000  0.500000  "],"text/html":["\n","  <div id=\"df-dab444d2-0e00-4e9a-9169-0f8af6f109ff\">\n","    <div class=\"colab-df-container\">\n","      <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>price</th>\n","      <th>area</th>\n","      <th>bedrooms</th>\n","      <th>bathrooms</th>\n","      <th>stories</th>\n","      <th>mainroad</th>\n","      <th>guestroom</th>\n","      <th>basement</th>\n","      <th>hotwaterheating</th>\n","      <th>airconditioning</th>\n","      <th>parking</th>\n","      <th>prefarea</th>\n","      <th>semi-furnished</th>\n","      <th>unfurnished</th>\n","      <th>areaperbedroom</th>\n","      <th>bbratio</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>5250000</td>\n","      <td>5500</td>\n","      <td>3</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1833.333333</td>\n","      <td>0.666667</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>4480000</td>\n","      <td>4040</td>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>1346.666667</td>\n","      <td>0.333333</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3570000</td>\n","      <td>3640</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1820.000000</td>\n","      <td>0.500000</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2870000</td>\n","      <td>3040</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>1520.000000</td>\n","      <td>0.500000</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>3570000</td>\n","      <td>4500</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>2250.000000</td>\n","      <td>0.500000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","      <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-dab444d2-0e00-4e9a-9169-0f8af6f109ff')\"\n","              title=\"Convert this dataframe to an interactive table.\"\n","              style=\"display:none;\">\n","        \n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","       width=\"24px\">\n","    <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n","    <path d=\"M18.56 5.44l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94zm-11 1L8.5 8.5l.94-2.06 2.06-.94-2.06-.94L8.5 2.5l-.94 2.06-2.06.94zm10 10l.94 2.06.94-2.06 2.06-.94-2.06-.94-.94-2.06-.94 2.06-2.06.94z\"/><path d=\"M17.41 7.96l-1.37-1.37c-.4-.4-.92-.59-1.43-.59-.52 0-1.04.2-1.43.59L10.3 9.45l-7.72 7.72c-.78.78-.78 2.05 0 2.83L4 21.41c.39.39.9.59 1.41.59.51 0 1.02-.2 1.41-.59l7.78-7.78 2.81-2.81c.8-.78.8-2.07 0-2.86zM5.41 20L4 18.59l7.72-7.72 1.47 1.35L5.41 20z\"/>\n","  </svg>\n","      </button>\n","      \n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      flex-wrap:wrap;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","      <script>\n","        const buttonEl =\n","          document.querySelector('#df-dab444d2-0e00-4e9a-9169-0f8af6f109ff button.colab-df-convert');\n","        buttonEl.style.display =\n","          google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","        async function convertToInteractive(key) {\n","          const element = document.querySelector('#df-dab444d2-0e00-4e9a-9169-0f8af6f109ff');\n","          const dataTable =\n","            await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                     [key], {});\n","          if (!dataTable) return;\n","\n","          const docLinkHtml = 'Like what you see? Visit the ' +\n","            '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","            + ' to learn more about interactive tables.';\n","          element.innerHTML = '';\n","          dataTable['output_type'] = 'display_data';\n","          await google.colab.output.renderOutput(dataTable, element);\n","          const docLink = document.createElement('div');\n","          docLink.innerHTML = docLinkHtml;\n","          element.appendChild(docLink);\n","        }\n","      </script>\n","    </div>\n","  </div>\n","  "]},"metadata":{},"execution_count":4}]},{"cell_type":"code","source":["X = data.drop('price', axis = 1)\n","y = data[['price']]"],"metadata":{"id":"SFV7mHg7tUs3","executionInfo":{"status":"ok","timestamp":1666965324769,"user_tz":240,"elapsed":17,"user":{"displayName":"Keegan Henderson","userId":"03705415019128751303"}}},"execution_count":5,"outputs":[]},{"cell_type":"code","source":["from sklearn.model_selection import train_test_split\n","X_train, X_test, y_train, y_test = train_test_split(X,y, test_size=.2, random_state=42)"],"metadata":{"id":"GHgggelUuLIx","executionInfo":{"status":"ok","timestamp":1666965325119,"user_tz":240,"elapsed":366,"user":{"displayName":"Keegan Henderson","userId":"03705415019128751303"}}},"execution_count":6,"outputs":[]},{"cell_type":"markdown","source":["###Linear Regression"],"metadata":{"id":"rmdo66FVumeh"}},{"cell_type":"code","source":["from sklearn.linear_model import LinearRegression\n","regressor=LinearRegression()\n","regressor.fit(X_train,y_train)\n","lr = regressor.score(X_test,y_test)\n","regressor.score(X_test,y_test)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-Kighpkhue2Y","executionInfo":{"status":"ok","timestamp":1666965325121,"user_tz":240,"elapsed":10,"user":{"displayName":"Keegan Henderson","userId":"03705415019128751303"}},"outputId":"29cff70e-0ed9-4519-ed88-fb3ea85f44ff"},"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.6789132973714737"]},"metadata":{},"execution_count":7}]},{"cell_type":"markdown","source":["##Random Forest"],"metadata":{"id":"OvnCEK7FvrqG"}},{"cell_type":"code","source":["from sklearn.ensemble import RandomForestRegressor\n","RFC = RandomForestRegressor(n_estimators= 500,random_state=42)\n","RFC.fit(X_train,y_train)\n","rf = RFC.score(X_test,y_test)\n","RFC.score(X_test,y_test)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"-hMkMnybuucH","executionInfo":{"status":"ok","timestamp":1666965329386,"user_tz":240,"elapsed":4271,"user":{"displayName":"Keegan Henderson","userId":"03705415019128751303"}},"outputId":"66ae4a25-8c5b-4c03-f2e3-9be6d2c65ca1"},"execution_count":8,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:3: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().\n","  This is separate from the ipykernel package so we can avoid doing imports until\n"]},{"output_type":"execute_result","data":{"text/plain":["0.6902392855071015"]},"metadata":{},"execution_count":8}]},{"cell_type":"markdown","source":["##PCA \n","###Linear Regression"],"metadata":{"id":"vMEAzgrlyU2j"}},{"cell_type":"code","source":["#Scaling\n","from sklearn.preprocessing import StandardScaler\n","sc = StandardScaler()\n","X_scaled = sc.fit_transform(X)\n","y_scaled = sc.fit_transform(y)"],"metadata":{"id":"6Y9_3Pweu1LM","executionInfo":{"status":"ok","timestamp":1666965329387,"user_tz":240,"elapsed":11,"user":{"displayName":"Keegan Henderson","userId":"03705415019128751303"}}},"execution_count":9,"outputs":[]},{"cell_type":"code","source":["from sklearn.decomposition import PCA\n","pca = PCA(n_components = 4)\n","pca.fit(X_scaled)\n","x_pca = pca.transform(X_scaled)"],"metadata":{"id":"Jv6e-3Uqy1-U","executionInfo":{"status":"ok","timestamp":1666965329643,"user_tz":240,"elapsed":264,"user":{"displayName":"Keegan Henderson","userId":"03705415019128751303"}}},"execution_count":10,"outputs":[]},{"cell_type":"code","source":["X_train,X_test, y_train,y_test = train_test_split(x_pca, y_scaled,\n","                                                  test_size = 0.2,\n","                                                  shuffle = True,\n","                                                  random_state = 49)"],"metadata":{"id":"gdBLhrn_y8uj","executionInfo":{"status":"ok","timestamp":1666965329644,"user_tz":240,"elapsed":6,"user":{"displayName":"Keegan Henderson","userId":"03705415019128751303"}}},"execution_count":11,"outputs":[]},{"cell_type":"code","source":["regressor.fit(X_train,y_train)\n","pca_reg = regressor.score(X_test,y_test)\n","regressor.score(X_test,y_test)\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6FyegNXUzUvd","executionInfo":{"status":"ok","timestamp":1666965329998,"user_tz":240,"elapsed":359,"user":{"displayName":"Keegan Henderson","userId":"03705415019128751303"}},"outputId":"32cfd2d8-a32b-4e9e-a1eb-c2c6cee5862f"},"execution_count":12,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0.7563300732521232"]},"metadata":{},"execution_count":12}]},{"cell_type":"markdown","source":["Random Forest"],"metadata":{"id":"hgLX7i001FtC"}},{"cell_type":"code","source":["RFC = RandomForestRegressor(n_estimators= 500,random_state=49)\n","RFC.fit(X_train,y_train)\n","pca_rf = RFC.score(X_test,y_test)\n","RFC.score(X_test,y_test)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"i38XnRHEzb4f","executionInfo":{"status":"ok","timestamp":1666965335837,"user_tz":240,"elapsed":5847,"user":{"displayName":"Keegan Henderson","userId":"03705415019128751303"}},"outputId":"2992bbc3-fc65-47e7-fa37-be10bede4798"},"execution_count":13,"outputs":[{"output_type":"stream","name":"stderr","text":["/usr/local/lib/python3.7/dist-packages/ipykernel_launcher.py:2: DataConversionWarning: A column-vector y was passed when a 1d array was expected. Please change the shape of y to (n_samples,), for example using ravel().\n","  \n"]},{"output_type":"execute_result","data":{"text/plain":["0.7329095625078506"]},"metadata":{},"execution_count":13}]},{"cell_type":"markdown","source":["##Pretty Table"],"metadata":{"id":"ImP7qWsW13jC"}},{"cell_type":"code","source":["from prettytable import PrettyTable as pt"],"metadata":{"id":"rzPrxU5V1J37","executionInfo":{"status":"ok","timestamp":1666965335839,"user_tz":240,"elapsed":10,"user":{"displayName":"Keegan Henderson","userId":"03705415019128751303"}}},"execution_count":14,"outputs":[]},{"cell_type":"code","source":["table = pt([\"Type of Test\",\"Score\"])"],"metadata":{"id":"PfhXFfUn1_E-","executionInfo":{"status":"ok","timestamp":1666965336143,"user_tz":240,"elapsed":312,"user":{"displayName":"Keegan Henderson","userId":"03705415019128751303"}}},"execution_count":15,"outputs":[]},{"cell_type":"code","source":["table.add_row([\"Linear Regression\",lr])\n","table.add_row([\"Random Forest\", rf])\n","table.add_row([\"Linear Regression\", pca_reg])\n","table.add_row([\"Random Forest\", pca_rf])\n"],"metadata":{"id":"FFCN_qBF2IwT","executionInfo":{"status":"ok","timestamp":1666965336144,"user_tz":240,"elapsed":18,"user":{"displayName":"Keegan Henderson","userId":"03705415019128751303"}}},"execution_count":16,"outputs":[]},{"cell_type":"code","source":["print(table)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"QV0hrAy32425","executionInfo":{"status":"ok","timestamp":1666965336146,"user_tz":240,"elapsed":18,"user":{"displayName":"Keegan Henderson","userId":"03705415019128751303"}},"outputId":"9fa7791d-a6cc-40fc-f3b3-ab31d93f1b57"},"execution_count":17,"outputs":[{"output_type":"stream","name":"stdout","text":["+-------------------+--------------------+\n","|    Type of Test   |       Score        |\n","+-------------------+--------------------+\n","| Linear Regression | 0.6789132973714737 |\n","|   Random Forest   | 0.6902392855071015 |\n","| Linear Regression | 0.7563300732521232 |\n","|   Random Forest   | 0.7329095625078506 |\n","+-------------------+--------------------+\n"]}]},{"cell_type":"code","source":[],"metadata":{"id":"p6XsABVS3TSO","executionInfo":{"status":"ok","timestamp":1666965336147,"user_tz":240,"elapsed":16,"user":{"displayName":"Keegan Henderson","userId":"03705415019128751303"}}},"execution_count":17,"outputs":[]}]}